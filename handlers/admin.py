# admin.py
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardRemove
from database import db  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from keyboards import admin_panel_kb
from keyboards import user_panel_kb
from aiogram.filters import Command

admin_router = Router()

class AddQuestion(StatesGroup):
    topic = State()
    question = State()
    option_a = State()
    option_b = State()
    option_c = State()
    option_d = State()
    correct = State()

async def is_super_admin(telegram_id):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —è–≤–ª—è–µ—Ç—Å—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    # –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ ID
    return telegram_id == 6040567717

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@admin_router.message(Command('add_admin'))
async def add_admin(msg: Message):
    if not await is_super_admin(msg.from_user.id):
        await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
    text = msg.text.strip().split(maxsplit=1)
    if len(text) > 1:
        try:
            new_admin_id = int(text[1])  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
            await db.add_admin(new_admin_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            try:
                await bot.send_message(new_admin_id, "üéâ –í—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞!")
            except Exception as e:
                await msg.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–≤–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û—à–∏–±–∫–∞: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤–æ–≥–æ
            await msg.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {new_admin_id} —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            await msg.answer("üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            await bot.close()
            await bot.start()

        except ValueError:
            await msg.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.")
    else:
        await msg.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@admin_router.message(Command('remove_admin'))
async def remove_admin(msg: Message):
    if not await is_super_admin(msg.from_user.id):
        await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
    text = msg.text.strip().split(maxsplit=1)
    if len(text) > 1:
        try:
            admin_id_to_remove = int(text[1])  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
            await db.remove_admin(admin_id_to_remove)

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            try:
                await bot.send_message(admin_id_to_remove, "‚ùå –í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –±–æ—Ç–∞.")
            except Exception as e:
                await msg.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û—à–∏–±–∫–∞: {e}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await msg.answer(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {admin_id_to_remove} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")

            # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            await msg.answer("üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            await bot.close()
            await bot.start()

        except ValueError:
            await msg.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
    else:
        await msg.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")



# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞
@admin_router.message(CommandStart())
async def start_handler(msg: Message):
    if await db.is_admin(msg.from_user.id):
        await msg.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!", reply_markup=admin_panel_kb())
    else:
        await msg.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µüëá", reply_markup=user_panel_kb())

@admin_router.message(Command('delete'))
async def del_msg(msg: Message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞–¥–º–∏–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if not await db.is_admin(msg.from_user.id):
        await msg.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤.")
        return

    text = msg.text.strip().split(maxsplit=1)
    if len(text) > 1:
        command_text = text[1]  # –¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        result = await db.delete_question(command_text)

        if result and "DELETE" in result:
            await msg.answer(f"‚úÖ –í–æ–ø—Ä–æ—Å '{command_text}' –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")
        else:
            await msg.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
    else:
        await msg.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å. –ü—Ä–∏–º–µ—Ä:\n`/delete –ö–∞–∫–æ–π –≥–æ—Ä–æ–¥ —Å—Ç–æ–ª–∏—Ü–∞ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞?`")


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async def is_admin(msg: Message):
    return await db.is_admin(msg.from_user.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üì• –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å"
@admin_router.message(F.text == "üì• –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å")
async def add_question_start(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await msg.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É –≤–æ–ø—Ä–æ—Å–∞:")
        await state.set_state(AddQuestion.topic)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(F.text == "üìÑ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã")
async def view_all_questions(msg: Message):
    if await is_admin(msg):
        questions = await db.get_question()
        if questions:
            message = "–°“±—Ä–∞“õ—Ç–∞—Ä –∂”ô–Ω–µ –∂–∞—É–∞–±—ã:\n\n"
            for question in questions:
                message += f"\"{question['question']}\" - {question['correct_option']}\n"
            print(len(questions), (questions))
            await msg.answer(message)
        else:
            await msg.answer("–ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=admin_panel_kb())
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤.")

@admin_router.message(AddQuestion.topic)
async def get_topic(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await state.update_data(topic=msg.text)
        await msg.answer("–í–≤–µ–¥–∏—Ç–µ —Å–∞–º –≤–æ–ø—Ä–æ—Å:")
        await state.set_state(AddQuestion.question)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(AddQuestion.question)
async def get_question(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await state.update_data(question=msg.text)
        await msg.answer("–í–∞—Ä–∏–∞–Ω—Ç A:")
        await state.set_state(AddQuestion.option_a)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(AddQuestion.option_a)
async def get_a(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await state.update_data(a=msg.text)
        await msg.answer("–í–∞—Ä–∏–∞–Ω—Ç B:")
        await state.set_state(AddQuestion.option_b)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(AddQuestion.option_b)
async def get_b(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await state.update_data(b=msg.text)
        await msg.answer("–í–∞—Ä–∏–∞–Ω—Ç C:")
        await state.set_state(AddQuestion.option_c)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(AddQuestion.option_c)
async def get_c(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await state.update_data(c=msg.text)
        await msg.answer("–í–∞—Ä–∏–∞–Ω—Ç D:")
        await state.set_state(AddQuestion.option_d)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(AddQuestion.option_d)
async def get_d(msg: Message, state: FSMContext):
    if await is_admin(msg):
        await state.update_data(d=msg.text)
        await msg.answer("–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (A/B/C/D):")
        await state.set_state(AddQuestion.correct)
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")

@admin_router.message(AddQuestion.correct)
async def save_question(msg: Message, state: FSMContext):
    if await is_admin(msg):
        correct = msg.text.strip().upper()
        if correct not in ["A", "B", "C", "D"]:
            await msg.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ A, B, C –∏–ª–∏ D.")
            return
        await state.update_data(correct=correct)

        data = await state.get_data()
        await db.add_question(
            topic=data['topic'],
            question=data['question'],
            a=data['a'],
            b=data['b'],
            c=data['c'],
            d=data['d'],
            correct=correct
        )
        await msg.answer("‚úÖ –í–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!", reply_markup=admin_panel_kb())
        await state.clear()
    else:
        await msg.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞.")



